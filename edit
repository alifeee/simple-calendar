#!/var/www/simple-calendar/env/bin/python3

import csv
import os
import sys
import re
from datetime import datetime
from urllib.parse import parse_qs
from yaml import dump

request = sys.stdin.read()
qs = parse_qs(request)
NAME = qs.get("name", [""])[0]
qs.pop("name")


def error(message):
    log("terminating because of error")
    log(message)
    print("Status: 400")
    print()
    print(message)
    sys.exit(1)


def log(message):
    now = datetime.utcnow()
    now_str = now.strftime("%Y-%m-%d %H:%M:%S")
    with open("log", "a", encoding="utf-8") as file:
        print(f"[{now_str}]: {message}", file=file)


# bad (non alpha-numeric or dash) characters
if len(re.sub(r"[^a-zA-Z0-9-]", "", NAME)) < len(NAME):
    error(f"bad characters found in name: {NAME}")

# no yaml file exists
YAML_FILE = os.path.join("_data", f"{NAME}.yaml")
if not os.path.exists(YAML_FILE):
    error(f"{YAML_FILE} not found")

# verify all request items look like dates
for date, event in qs.items():
    if re.match(r"[0-9]{4}-[0-9]{2}-[0-9]{2}", date) is None:
        error(f"bad date: {date}\n for event: {event}")

# backup _data folder
now = datetime.utcnow()
now_str = now.strftime("%Y-%m-%dT%H%M%S")
log("starting an edit")
backup_folder = os.path.join("backups", now_str)
log(f"creating backup folder -> {backup_folder}")
if not os.path.exists(backup_folder):
    os.makedirs(backup_folder)
log(f"copying files in _data/ to {backup_folder}")
os.system(f"cp _data/* {backup_folder}")

# create object from request items (flatten lists)
newfile = {}
for date, event in qs.items():
    newfile[date] = event[0]
log(f"parsed events to dict -> \n{newfile}")

yaml_new = dump(newfile)
log(f"parsed events to yaml -> \n{yaml_new}")

log(f"saving yaml to {YAML_FILE}")
with open(YAML_FILE, "w", encoding="utf-8") as file:
    file.write(dump(newfile))

log("running npm run build")
_ = os.system("./build.sh &>/dev/null")

print("Location: /")
print()
print("redirect to home page")
